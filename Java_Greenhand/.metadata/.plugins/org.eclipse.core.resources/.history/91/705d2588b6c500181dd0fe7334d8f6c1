package castle;

import java.util.HashMap;

public class Room {
    private String description;
    private HashMap<String, Room> exits = new HashMap<String, Room>();

    public Room(String description) 
    {
        this.description = description;
    }
    
    public void setExit(String dir, Room r) {
    	exits.put(dir, r);
    }

//    public void setExits(Room north, Room east, Room south, Room west) 
//    {
//        if(north != null)
//            northExit = north;
//        if(east != null)
//            eastExit = east;
//        if(south != null)
//            southExit = south;
//        if(west != null)
//            westExit = west;
//    }
    
    public String getRoomDirection() {
    	StringBuffer ret = new StringBuffer();
    	if (northExit != null) {
    		ret.append("north ");
    	}
    	if (eastExit != null) {
    		ret.append("east");
    	}
    	if (southExit != null) {
    		ret.append("south");
    	}
    	if (westExit != null ) {
    		ret.append("west");
    	}
    	return ret.toString();
    }
    
    public Room getExit(String direction) {
    	Room nextRoom = null;
        if(direction.equals("north")) {
            nextRoom = northExit;
        }
        if(direction.equals("east")) {
            nextRoom = eastExit;
        }
        if(direction.equals("south")) {
            nextRoom = southExit;
        }
        if(direction.equals("west")) {
            nextRoom = westExit;
        }
        return nextRoom;
    }

    @Override
    public String toString()
    {
        return description;
    }
}
